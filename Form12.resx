<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>